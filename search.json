[{"path":[]},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, colour, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behaviour include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement davison.jack.jd@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behaviour deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behaviour inappropriate. public apology may requested.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behaviour. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behaviour. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://openair-project.github.io/worldmet/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://openair-project.github.io/worldmet/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to worldmet","title":"Contributing to worldmet","text":"outlines propose change worldmet.","code":""},{"path":"https://openair-project.github.io/worldmet/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to worldmet","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://openair-project.github.io/worldmet/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to worldmet","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex.","code":""},{"path":"https://openair-project.github.io/worldmet/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to worldmet","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"openair-project/worldmet\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header).","code":""},{"path":"https://openair-project.github.io/worldmet/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to worldmet","text":"Care taken new code follows style similar rest openair worldmet. user-facing example exported functions written “lowerCamelCase” (.e., polarMap() rather polar_map()). use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://openair-project.github.io/worldmet/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to worldmet","text":"Please note worldmet project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://openair-project.github.io/worldmet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 worldmet authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://openair-project.github.io/worldmet/articles/worldmet.html","id":"show-all-sites","dir":"Articles","previous_headings":"","what":"Show all sites","title":"Using {worldmet} to Locate, Import & Visualise Meteorological Data","text":"function use find sites available getMeta(). function can run using different options, can easiest run without options. produces map available sites, can quickly accessed. Click expand markers find site interest (shown blue marker). reveals site information including site name start end date available data. important information revealed marker code, used access data. using getMeta() probably useful read information data frame. Note plot = FALSE stops function providing map.","code":"getMeta() #> # A tibble: 12,773 × 12 #>    usaf  wban  station ctry  st    call  latitude longitude `elev(m)` begin      #>    <chr> <chr> <chr>   <chr> <chr> <chr>    <dbl>     <dbl>     <dbl> <date>     #>  1 0100… 99999 EDGEOYA NO    NA    NA        78.2      22.8      14   1973-01-01 #>  2 0100… 99999 NY-ALE… SV    NA    NA        78.9      11.9       7.7 1973-01-06 #>  3 0100… 99999 LONGYE… SV    NA    ENSB      78.2      15.5      26.8 1975-09-29 #>  4 0100… 99999 KARL X… SV    NA    NA        80.6      25         5   1955-01-01 #>  5 0101… 99999 ANDOYA  NO    NA    ENAN      69.3      16.1      13.1 1931-01-03 #>  6 0101… 99999 KVITOYA SV    NA    NA        80.1      31.5      10   1986-11-18 #>  7 0101… 99999 HEKKIN… NO    NA    NA        69.6      17.8      14   1980-03-14 #>  8 0101… 99999 KONGSO… NO    NA    NA        78.9      28.9      20   1993-05-01 #>  9 0101… 99999 AKSELO… SV    NA    NA        77.7      14.8       6   1973-01-01 #> 10 0102… 99999 SORKAP… SV    NA    NA        76.5      16.6      10   2010-10-08 #> # ℹ 12,763 more rows #> # ℹ 2 more variables: end <date>, code <chr> met_info <- getMeta(plot = FALSE)"},{"path":"https://openair-project.github.io/worldmet/articles/worldmet.html","id":"search-based-on-latitude-and-longitude","dir":"Articles","previous_headings":"","what":"Search based on latitude and longitude","title":"Using {worldmet} to Locate, Import & Visualise Meteorological Data","text":"Often, one idea region site interest. example, interest sites close London, latitude longitude can supplied search carried 10 nearest sites location. also option n can used change number nearest sites shown. lat/lon provided, clicking blue marker show approximate distance site search coordinates.","code":"getMeta(lat = 51.5, lon = 0) #> # A tibble: 10 × 13 #>    usaf  wban  station ctry  st    call  latitude longitude `elev(m)` begin      #>    <chr> <chr> <chr>   <chr> <chr> <chr>    <dbl>     <dbl>     <dbl> <date>     #>  1 0376… 99999 LONDON… GB    NA    EGLC      51.5     0.055       5.8 1988-01-29 #>  2 0377… 99999 ST JAM… UK    NA    NA        51.5    -0.117       5   2009-12-18 #>  3 0376… 99999 BIGGIN… UK    NA    EGKB      51.3     0.033     182.  1988-01-05 #>  4 0378… 99999 KENLEY… UK    NA    NA        51.3    -0.083     170   1988-02-01 #>  5 0367… 99999 NORTHO… UK    NA    EGWU      51.6    -0.418      37.8 1973-01-01 #>  6 0377… 99999 LONDON… GB    NA    EGLL      51.5    -0.461      25.3 1948-12-01 #>  7 0377… 99999 LONDON… GB    NA    EGKK      51.1    -0.19       61.6 1973-01-01 #>  8 0368… 99999 ROTHAM… UK    NA    NA        51.8    -0.358     128   2013-08-20 #>  9 0376… 99999 CHARLW… UK    NA    NA        51.1    -0.229      68   1992-03-01 #> 10 0368… 99999 LONDON… GB    NA    EGSS      51.9     0.235     106.  1973-01-01 #> # ℹ 3 more variables: end <date>, code <chr>, dist <dbl>"},{"path":"https://openair-project.github.io/worldmet/articles/worldmet.html","id":"importing-data","dir":"Articles","previous_headings":"","what":"Importing Data","title":"Using {worldmet} to Locate, Import & Visualise Meteorological Data","text":"obtain data user must supply code (see ) year(s) interest. example, download data Heathrow Airport 2010 (code 037720-99999): wind rose (example) can easily plotted using openair:","code":"met_london <- importNOAA(code = \"037720-99999\", year = 2010) head(met_london) #> # A tibble: 6 × 25 #>   code        station date                latitude longitude  elev    ws      wd #>   <fct>       <fct>   <dttm>                 <dbl>     <dbl> <dbl> <dbl>   <dbl> #> 1 037720-999… HEATHR… 2010-01-01 00:00:00     51.5    -0.461  25.3  3.27  17.4   #> 2 037720-999… HEATHR… 2010-01-01 01:00:00     51.5    -0.461  25.3  3.1    6.13  #> 3 037720-999… HEATHR… 2010-01-01 02:00:00     51.5    -0.461  25.3  3.1   15.6   #> 4 037720-999… HEATHR… 2010-01-01 03:00:00     51.5    -0.461  25.3  2.93  17.0   #> 5 037720-999… HEATHR… 2010-01-01 04:00:00     51.5    -0.461  25.3  2.77   0.606 #> 6 037720-999… HEATHR… 2010-01-01 05:00:00     51.5    -0.461  25.3  2.43 356.    #> # ℹ 17 more variables: air_temp <dbl>, atmos_pres <dbl>, visibility <dbl>, #> #   dew_point <dbl>, RH <dbl>, ceil_hgt <dbl>, cl_1 <dbl>, cl_2 <dbl>, #> #   cl_3 <dbl>, cl <dbl>, cl_1_height <dbl>, cl_2_height <dbl>, #> #   cl_3_height <dbl>, precip_12 <dbl>, precip_6 <dbl>, pwc <chr>, precip <dbl> # load openair openair::windRose(met_london)"},{"path":"https://openair-project.github.io/worldmet/articles/worldmet.html","id":"parallel-processing","dir":"Articles","previous_headings":"","what":"Parallel Processing","title":"Using {worldmet} to Locate, Import & Visualise Meteorological Data","text":"importing lot meteorological data, can take long . combination year station requires downloading separate data file NOAA’s online data directory, time download takes can quickly add . importNOAA() can use parallel processing speed downloading , powered capable mirai package. users mirai “daemons” set, importNOAA() download files parallel. greatest benefits seen spawn many daemons cores machine, although one fewer available cores often good rule thumb. mileage may vary, however, naturally spawning daemons station-year combinations lead diminishing returns. Historically, parallelism worldmet achieved doParallel, foreach {parallel} activated using n.cores argument. still work, recommended users set daemons using importNOAA(). avoid issues mistakenly spawning many daemons, accidentally spawning daemons within daemons.","code":"# set workers - once per session mirai::daemons(4)  # import lots of data - NB: no change in importNOAA()! big_met <- importNOAA(code = \"037720-99999\", year = 2010:2020)"},{"path":"https://openair-project.github.io/worldmet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Carslaw. Author, maintainer. Jack Davison. Author.","code":""},{"path":"https://openair-project.github.io/worldmet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carslaw D, Davison J (2025). worldmet: Import Surface Meteorological Data NOAA Integrated Surface Database (ISD). R package version 0.10.1.001, https://openair-project.github.io/worldmet/.","code":"@Manual{,   title = {worldmet: Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD)},   author = {David Carslaw and Jack Davison},   year = {2025},   note = {R package version 0.10.1.001},   url = {https://openair-project.github.io/worldmet/}, }"},{"path":[]},{"path":[]},{"path":"https://openair-project.github.io/worldmet/index.html","id":"id_-core-features","dir":"","previous_headings":"","what":"💡 Core Features","title":"Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD)","text":"worldmet small handful core functionality. Access ISD metadata using getMeta(). Import ISD monitoring data using importNOAA(), options improve performance parallel processing. Data format ready use , example, openair::windRose(). Write files ADMS format using exportADMS().","code":""},{"path":"https://openair-project.github.io/worldmet/index.html","id":"id_-documentation","dir":"","previous_headings":"","what":"📖 Documentation","title":"Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD)","text":"worldmet functions fully documented; access documentation using R IDE choice. Documentation also hosted online package website.  guide openair toolkit can found online book, contains lots code snippets, demonstrations functionality, ideas application openair’s various functions.","code":"?worldmet::importNOAA"},{"path":"https://openair-project.github.io/worldmet/index.html","id":"id_️-installation","dir":"","previous_headings":"","what":"🗃️ Installation","title":"Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD)","text":"worldmet can installed CRAN : can also install development version worldmet GitHub using pak: 🏛️ worldmet primarily maintained David Carslaw. 📃 worldmet licensed MIT License. 🧑‍💻 Contributions welcome wider community. See contributing guide code conduct information.","code":"install.packages(\"worldmet\") # install.packages(\"pak\") pak::pak(\"openair-project/worldmet\")"},{"path":"https://openair-project.github.io/worldmet/reference/exportADMS.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a meteorological data frame in ADMS format — exportADMS","title":"Export a meteorological data frame in ADMS format — exportADMS","text":"Writes text file ADMS format location user's choosing, optional interpolation missing values.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/exportADMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a meteorological data frame in ADMS format — exportADMS","text":"","code":"exportADMS(dat, out = \"./ADMS_met.MET\", interp = FALSE, maxgap = 2)"},{"path":"https://openair-project.github.io/worldmet/reference/exportADMS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a meteorological data frame in ADMS format — exportADMS","text":"dat data frame imported importNOAA(). file name ADMS file. file written working directory default. interp interpolation missing values undertaken? TRUE linear interpolation carried gaps including maxgap. maxgap maximum gap hours interpolated missing data interp = TRUE. Data gaps maxgap left missing.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/exportADMS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a meteorological data frame in ADMS format — exportADMS","text":"exportADMS() returns input dat invisibly.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/exportADMS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a meteorological data frame in ADMS format — exportADMS","text":"","code":"if (FALSE) { # \\dontrun{ # import some data then export it dat <- importNOAA(year = 2012) exportADMS(dat, out = \"~/adms_met.MET\") } # }"},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a ISD site code and other meta data — getMeta","title":"Find a ISD site code and other meta data — getMeta","text":"Get information meteorological sites","code":""},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a ISD site code and other meta data — getMeta","text":"","code":"getMeta(   site = \"heathrow\",   lat = NA,   lon = NA,   crs = 4326,   country = NA,   state = NA,   n = 10,   end.year = \"current\",   provider = c(\"OpenStreetMap\", \"Esri.WorldImagery\"),   plot = TRUE,   returnMap = FALSE )"},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a ISD site code and other meta data — getMeta","text":"site site name search string e.g. site = \"heathrow\". search strings partial can upper lower case e.g. site = \"HEATHR\". lat, lon Decimal latitude longitude (Y/X coordinate using different crs). provided, n closest ISD stations coordinate returned. crs coordinate reference system (CRS) data, passed sf::st_crs(). default EPSG:4326, CRS associated commonly used latitude longitude coordinates. Different coordinate systems can specified using crs (e.g., crs = 27700 British National Grid). Note non-lat/lng coordinate systems re-projected EPSG:4326 making comparisons NOAA metadata plotting map. country country code. two letter code. full listing see https://www1.ncdc.noaa.gov/pub/data/noaa/isd-history.csv. state state code. two letter code. n number nearest sites search based latitude longitude. end.year help filter sites based recent available data . end.year can \"current\", \"\" numeric year 2016, range years e.g. 1990:2016 (select site end date range. default sites data current year returned. provider default map created readers may toggle vector base map satellite/aerial image. provider allows users override default; see http://leaflet-extras.github.io/leaflet-providers/preview/ list base maps can used. multiple base maps provided, can toggled using \"layer control\" interface. plot TRUE plot sites interactive leaflet map. returnMap leaflet map returned instead meta data? Default FALSE.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a ISD site code and other meta data — getMeta","text":"data frame returned available meta data, mostly importantly including code can supplied importNOAA(). latitude longitude searches made approximate distance, dist km also returned.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find a ISD site code and other meta data — getMeta","text":"function primarily used find site code can used access data using importNOAA(). Sites searches approximately 30,000 sites can carried based site name based nearest locations based user-supplied latitude longitude.","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find a ISD site code and other meta data — getMeta","text":"David Carslaw","code":""},{"path":"https://openair-project.github.io/worldmet/reference/getMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a ISD site code and other meta data — getMeta","text":"","code":"if (FALSE) { # \\dontrun{ ## search for sites with name beijing getMeta(site = \"beijing\") } # }  if (FALSE) { # \\dontrun{ ## search for near a specified lat/lon - near Beijing airport ## returns 'n' nearest by default getMeta(lat = 40, lon = 116.9) } # }"},{"path":"https://openair-project.github.io/worldmet/reference/getMetaLive.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain site meta data from NOAA server — getMetaLive","title":"Obtain site meta data from NOAA server — getMetaLive","text":"Download NOAA meta data, allowing re-use direct querying.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/getMetaLive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain site meta data from NOAA server — getMetaLive","text":"","code":"getMetaLive(...)"},{"path":"https://openair-project.github.io/worldmet/reference/getMetaLive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain site meta data from NOAA server — getMetaLive","text":"... Currently unused.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/getMetaLive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain site meta data from NOAA server — getMetaLive","text":"tibble","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/reference/getMetaLive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain site meta data from NOAA server — getMetaLive","text":"","code":"if (FALSE) { # \\dontrun{ meta <- getMetaLive() head(meta) } # }"},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"main function import data NOAA Integrated Surface Database (ISD). ISD contains detailed surface meteorological data around world 30,000 locations. general information ISD see https://www.ncei.noaa.gov/products/land-based-station/integrated-surface-database map https://gis.ncdc.noaa.gov/maps/ncei.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"","code":"importNOAA(   code = \"037720-99999\",   year = 2014,   hourly = TRUE,   source = c(\"delim\", \"fwf\"),   quiet = FALSE,   path = NA,   n.cores = NULL )"},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"code identifying code character string. code combination USAF WBAN unique identifiers. codes separated “-” e.g. code = \"037720-99999\". year year import. can vector years e.g. year = 2000:2005. hourly hourly means calculated? default TRUE. FALSE raw data returned. source NOAA ISD service stores files two formats; delimited CSV files (\"delim\") fixed width files (\"fwf\"). importNOAA() defaults \"delim\" , delimited data store , users may wish try \"fwf\" instead. data sources identical one another. quiet FALSE, print missing sites / years screen, show progress bar multiple sites imported. path file path provided, data saved rds file chosen location e.g.  path = \"C:/Users/David\". Files saved year site. n.cores longer recommended; please set mirai::daemons() R session. argument provided back compatibility, passed n argument mirai::daemons() behalf user. set daemons reset function completes. Default NULL, means parallelism. n.cores = 1L equivalent n.cores = NULL.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"Returns data frame surface observations. data frame consistent use openair package. Note data returned GMT (UTC) time zone format. Users may wish express data time zones, e.g., merge air pollution data. lubridate package useful respect.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"Note following units main variables: date Date/time POSIXct format. Note time zone GMT (UTC) may need adjusted merge local data. See details . latitude Latitude decimal degrees (-90 90). longitude Longitude decimal degrees (-180 180). Negative numbers west Greenwich Meridian. elevation Elevation site metres. wd Wind direction degrees. 90 east. ws Wind speed m/s. ceil_hgt height ground level (AGL) lowest cloud obscuring phenomena layer aloft 5/8 summation total sky cover, may predominantly opaque, vertical visibility surface-based obstruction. visibility visibility metres. air_temp Air temperature degrees Celcius. dew_point dew point temperature degrees Celcius. atmos_pres sea level pressure millibars. RH relative humidity (%). cl_1,  ...,  cl_3 Cloud cover different layers Oktas (1-8). cl Maximum cl_1 cl_3 cloud cover Oktas (1-8). cl_1_height, ..., cl_3_height Height cloud base later metres. precip_12 12-hour precipitation mm. sum column give annual precipitation. precip_6 6-hour precipitation mm. precip value precipitation spreads 12-hour total across previous 12 hours. pwc description present weather description (available). data returned GMT (UTC). may necessary adjust time zone combining data. example, air quality data available Beijing time zone set \"Etc/GMT-8\" (note negative offset even though Beijing ahead GMT. See openair package manual details), time zone met data can changed . One way attr(met$date, \"tzone\") <- \"Etc/GMT-8\" meteorological data frame called met. two data sets merged based date.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"parallel-processing","dir":"Reference","previous_headings":"","what":"Parallel Processing","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"importing lot meteorological data, can take long . combination year station requires downloading separate data file NOAA's online data directory, time download takes can quickly add . importNOAA() importNOAAlite() can use parallel processing speed downloading , powered capable {mirai} package. users {mirai} \"daemons\" set, functions download files parallel. greatest benefits seen spawn many daemons cores machine, although one fewer available cores often good rule thumb. mileage may vary, however, naturally spawning daemons station-year combinations lead diminishing returns.","code":"# set workers - once per session mirai::daemons(4)  # import lots of data - NB: no change in importNOAA()! big_met <- importNOAA(code = \"037720-99999\", year = 2010:2020)"},{"path":[]},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"David Carslaw","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Meteorological data from the NOAA Integrated Surface Database (ISD) — importNOAA","text":"","code":"if (FALSE) { # \\dontrun{ # import some data beijing_met <- importNOAA(code = \"545110-99999\", year = 2010:2011)  # importing lots of data? use mirai for parallel processing mirai::daemons(4) beijing_met2 <- importNOAA(code = \"545110-99999\", year = 2010:2025) } # }"},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Import ","title":"Import ","text":"function alternative importNOAA(), provides access \"Lite\" format data. subset larger importNOAA() dataset featuring eight common climatological variables. assigns nearest measurement \"top hour\" data, specific values likely similar different returned importNOAA(). Read technical document information.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import ","text":"","code":"importNOAAlite(code = \"037720-99999\", year = 2025, quiet = FALSE, path = NA)"},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import ","text":"code identifying code character string. code combination USAF WBAN unique identifiers. codes separated “-” e.g. code = \"037720-99999\". year year import. can vector years e.g. year = 2000:2005. quiet FALSE, print missing sites / years screen, show progress bar multiple sites imported. path file path provided, data saved rds file chosen location e.g.  path = \"C:/Users/David\". Files saved year site.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import ","text":"Returns data frame surface observations. data frame consistent use openair package. Note data returned GMT (UTC) time zone format. Users may wish express data time zones, e.g., merge air pollution data. lubridate package useful respect.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import ","text":"Note following units main variables: date Date/time POSIXct format. **Note time zone UTC may need adjusted merge local data. latitude Latitude decimal degrees (-90 90). longitude Longitude decimal degrees (-180 180). Negative numbers west Greenwich Meridian. elev Elevation site metres. ws Wind speed m/s. wd Wind direction degrees. 90 east. air_temp Air temperature degrees Celcius. atmos_pres sea level pressure millibars. dew_point dew point temperature degrees Celcius. precip_6 6-hour precipitation mm. precip_1 1-hour precipitation mm. sky Sky Condition Total Coverage Code. data returned GMT (UTC). may necessary adjust time zone combining data. example, air quality data available Beijing time zone set \"Etc/GMT-8\" (note negative offset even though Beijing ahead GMT. See openair package manual details), time zone met data can changed . One way attr(met$date, \"tzone\") <- \"Etc/GMT-8\" meteorological data frame called met. two data sets merged based date.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"parallel-processing","dir":"Reference","previous_headings":"","what":"Parallel Processing","title":"Import ","text":"importing lot meteorological data, can take long . combination year station requires downloading separate data file NOAA's online data directory, time download takes can quickly add . importNOAA() importNOAAlite() can use parallel processing speed downloading , powered capable {mirai} package. users {mirai} \"daemons\" set, functions download files parallel. greatest benefits seen spawn many daemons cores machine, although one fewer available cores often good rule thumb. mileage may vary, however, naturally spawning daemons station-year combinations lead diminishing returns.","code":"# set workers - once per session mirai::daemons(4)  # import lots of data - NB: no change in importNOAA()! big_met <- importNOAA(code = \"037720-99999\", year = 2010:2020)"},{"path":[]},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import ","text":"Jack Davison","code":""},{"path":"https://openair-project.github.io/worldmet/reference/importNOAAlite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import ","text":"","code":"if (FALSE) { # \\dontrun{ heathrow_lite <- importNOAAlite(code = \"037720-99999\", year = 2025) } # }"},{"path":"https://openair-project.github.io/worldmet/reference/weatherCodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Codes for weather types — weatherCodes","title":"Codes for weather types — weatherCodes","text":"data frame consists weather description codes used ISD. general use users.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/weatherCodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codes for weather types — weatherCodes","text":"","code":"weatherCodes"},{"path":"https://openair-project.github.io/worldmet/reference/weatherCodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Codes for weather types — weatherCodes","text":"object class tbl_df (inherits tbl, data.frame) 100 rows 2 columns.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/weatherCodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Codes for weather types — weatherCodes","text":"pwc Weather code, can merged pwc column importNOAA() datasets. description Description associated weather codes.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/weatherCodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Codes for weather types — weatherCodes","text":"","code":"weatherCodes #> # A tibble: 100 × 2 #>    pwc   description                                        #>    <chr> <chr>                                              #>  1 00    clear skies                                        #>  2 01    clouds dissolving                                  #>  3 02    state of sky unchanged                             #>  4 03    clouds developing                                  #>  5 04    visibility reduced by smoke                        #>  6 05    smoke                                              #>  7 06    widespread dust in suspension not raised by wind   #>  8 07    dust or sand raised by wind                        #>  9 08    well developed dust or sand whirls                 #> 10 09    dust or sand storm within sight but not at station #> # ℹ 90 more rows"},{"path":"https://openair-project.github.io/worldmet/reference/worldmet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"worldmet: Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD) — worldmet-package","title":"worldmet: Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD) — worldmet-package","text":"Functions import data 30,000 surface meteorological sites around world managed National Oceanic Atmospheric Administration (NOAA) Integrated Surface Database (ISD, see https://www.ncei.noaa.gov/products/land-based-station/integrated-surface-database).","code":""},{"path":"https://openair-project.github.io/worldmet/reference/worldmet-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"worldmet: Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD) — worldmet-package","text":"package contains functions import surface meteorological data 30,000 sites around world. data curated NOAA part Integrated Surface Database (ISD). access data using worldmet package please give full acknowledgement NOAA ISD. Users also take note usage restrictions. data work well openair package developed analyse air pollution data.","code":""},{"path":"https://openair-project.github.io/worldmet/reference/worldmet-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"worldmet: Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD) — worldmet-package","text":"general information ISD see https://www.ncei.noaa.gov/products/land-based-station/integrated-surface-database map https://gis.ncdc.noaa.gov/maps/ncei.","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/reference/worldmet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"worldmet: Import Surface Meteorological Data from NOAA Integrated Surface Database (ISD) — worldmet-package","text":"Maintainer: David Carslaw david.carslaw@york.ac.uk (ORCID) Authors: Jack Davison jack.davison@ricardo.com (ORCID)","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet (development version)","text":"importNOAA() now recommends trying source fails fetch data (.e., source = \"delim\" fails, user prompted try source = \"fwf\").","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet (development version)","text":"Remove present weather condition source = \"fwf\".","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-0101","dir":"Changelog","previous_headings":"","what":"worldmet 0.10.1","title":"worldmet 0.10.1","text":"CRAN release: 2025-08-20","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-10-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.10.1","text":"importNOAAlite() gained path argument, line importNOAA(). importNOAAlite() now supports parallel processing using mirai package, line importNOAA().","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-10-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.10.1","text":"importNOAAlite() can now import data years 2025.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-0100","dir":"Changelog","previous_headings":"","what":"worldmet 0.10.0","title":"worldmet 0.10.0","text":"CRAN release: 2025-07-30","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-10-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.10.0","text":"Parallel importing NOAA data now powered mirai. reduces number dependencies worldmet, also allows users flexible parallel processing achieved. Due change, users recommended set mirai::daemons() . n.core stil work back-compatibility, give -per-session warning. getMeta() gained crs argument search NOAA ISD stations coordinates latitude longitude. Added importNOAALite() access ISDLite filestore. Added importNOAA(source=) argument import ISD data different file stores. option can useful one file stores available whatever reason. error warning messages now powered cli informative.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-099","dir":"Changelog","previous_headings":"","what":"worldmet 0.9.9","title":"worldmet 0.9.9","text":"CRAN release: 2025-01-14","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-9-9","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.9.9","text":"quiet argument importNOAA() now also toggles progress bar.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-9-9-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.9.9","text":"getMeta() gained crs argument, allows getMeta(lat =, lon =) defined using coordinate systems.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-9-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.9.9","text":"Fixed join problem due dplyr updates. Fixed spelling mistakes weatherCodes Converted worldmet vignette article. ensure longer reliant NOAA’s servers. can now accessed https://openair-project.github.io/worldmet/articles/worldmet.html.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-096","dir":"Changelog","previous_headings":"","what":"worldmet 0.9.6","title":"worldmet 0.9.6","text":"CRAN release: 2022-10-05","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-9-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.9.6","text":"importNOAA() now display progress bar multiple years met data imported. Improved formatting popups getMeta() line openairmaps::networkMap(). Added provider argument getMeta(), allowing users define one leaflet basemaps. Uses default openairmaps::networkMap(). exportADMS() now invisibly returns input data, line , e.g., readr::write_csv().","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-095","dir":"Changelog","previous_headings":"","what":"worldmet 0.9.5","title":"worldmet 0.9.5","text":"CRAN release: 2021-04-20","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-9-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.9.5","text":"add precip exportADMS() Cloud cover data mostly spans 1 8 Oktas zero (clear sky); use ceil_hgt = 220000 (unlimited) indicate clear sky cloud cover reported missing. use ftp site information.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-094","dir":"Changelog","previous_headings":"","what":"worldmet 0.9.4","title":"worldmet 0.9.4","text":"CRAN release: 2021-04-09","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.9.4","text":"Fix precipitation. precip_12 gives sum precipitation past 12 hours sum column annual total mm. precip spreads 12-hour total evenly across previous 12 hours. worldmet longer tries combine 12 6 hour totals.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-093","dir":"Changelog","previous_headings":"","what":"worldmet 0.9.3","title":"worldmet 0.9.3","text":"CRAN release: 2021-03-29","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-9-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.9.3","text":"Catch missing data error report missing importing data using importNOAA()","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-092","dir":"Changelog","previous_headings":"","what":"worldmet 0.9.2","title":"worldmet 0.9.2","text":"CRAN release: 2020-09-17","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-9-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.9.2","text":"Exporting weatherCodes everything works used packages “explicit namespacing”” (e.g. worldmet::importNOAA()) without library(worldmet).","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-9-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.9.1","text":"fix bug lat lon provided getMeta() fix bug several years selected columns different lengths n.core = 1","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-9-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.9.1","text":"Significant changes due NOAA storage formats different storage locations Remove options precipitation present weather importNOAA(); just return everything Return data tibble","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-088","dir":"Changelog","previous_headings":"","what":"worldmet 0.8.8","title":"worldmet 0.8.8","text":"CRAN release: 2020-02-12","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-8-8","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.8.8","text":"export getMetaLive() allow users direct access meta data easy re-use without re-downloading. add option path allow users save met data rds file. deprecate fresh option getMeta(). Assume 9999 missing visibility (999999)","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-8-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.8.8","text":"fix short WBAN codes. make sure meta data used sites recent year","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-084","dir":"Changelog","previous_headings":"","what":"worldmet 0.8.4","title":"worldmet 0.8.4","text":"CRAN release: 2018-02-27","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-8-4","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.8.4","text":"query live meta data using getMeta(). parallel processing sites years. use readr::read_csv() meta data (read.csv() seems slow R 3.4.3).","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-8-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.8.4","text":"fix bug data available year using parallel processing","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"worldmet-080","dir":"Changelog","previous_headings":"","what":"worldmet 0.8.0","title":"worldmet 0.8.0","text":"CRAN release: 2017-12-18","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-8-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.8.0","text":"downloads now webserver rather ftp. faster allow downloads. Thanks Stuart Grange. add parallel processing using foreach.","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-7-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.7.4","text":"don’t use closeAllConnections().","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-7-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.7.3","text":"default downloading fresh meta data time. update meta data.","code":""},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-7-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.7.3","text":"fix current year problem (base meta data available package).","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"bug-fixes-0-7-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"worldmet 0.7.2","text":"make sure data returned NA missing NaN.","code":""},{"path":[]},{"path":"https://openair-project.github.io/worldmet/news/index.html","id":"new-features-0-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"worldmet 0.6","text":"Add ability return precipitation measurements, available. Add precipitation exportADMS()","code":""}]
